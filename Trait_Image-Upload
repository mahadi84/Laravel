
================= 01. What is Traits? Class vs Traits? =========

Traits are a collection of methods that can be incorporated into any other classes for reusability.
A class:-- provide a complete implementation of a specific service or functionality, 
whereas 
A Traits:-- provide a set of methods that can be mixed into multiple classes to provide them with additional functionality.

=================================== CODE  =====================
<?php

namespace App\Traits;
use Illuminate\Http\Request;
use Intervention\Image\ImageManager;
use Intervention\Image\Drivers\Gd\Driver;
use File;
use Str;


trait ImageUploadTrait{

    $manager = new ImageManager(new Driver());  
                                                 //'logo','500,600','uploads/logo'
    public function uploadImage(Request $request, $inputName, $imgSize, $path){
        if($request->hasFile($inputName)){
            $image = $request->{$inputName};
            $ext = $image->getClientOriginalExtension();
            $randomStr= Str::random(30);
            $imageName = $randomStr.'.'.$ext;

            // $image->move(public_path($path), $imageName);

                $img = explode(",", trim($imgSize));
                $imgWidth = $img[0];
                $imgHeight = $img[1];
  
           // Image::make($image)->resize($imgWidth, $imgHeight)
                                  ->save(public_path('uploads/'.$path.'/'.$imageName));

            

$img = $manager->read($image);
$img->resize($imgWidth, $imgHeight);
$img->to'.ucfirst($ext).'()->save(public_path('uploads/'.$path.'/'.$imageName));


           return $imageName;
        }
    }
                                                      //'logo','500,600','uploads/logo' 
    public function uploadMultiImage(Request $request, $inputName, $imgSize, $path){
        $allImages = [];        
            if($request->hasFile($inputName)){
                $images = $request->{$inputName};
                foreach($images as $image){
                    $ext = $image->getClientOriginalExtension();
                    $randomStr= Str::random(30);
                    $imageName = $randomStr.'.'.$ext;

                        $img = explode(",", trim($imgSize));
                        $imgWidth = $img[0];
                        $imgHeight = $img[1];
          
                    Image::make($image)->resize($imgWidth, $imgHeight)
                                          ->save(public_path('uploads/'.$path.'/'.$imageName));
                    
                    $allImages[] =  $imageName;  
                }

                return $allImages;
        }
    }

                                               //'logo','500,600','uploads/logo', oldImage(Get_it_from_query) 
    public function updateImage(Request $request, $inputName, $imgSize, $path, $oldImage){

        if($request->hasFile($inputName)){                     
            if(File::exists(public_path('uploads/'.$path.'/'.$oldImage))){
                File::delete(public_path('uploads/'.$path.'/'.$oldImage));
            }
            $image = $request->{$inputName};
            $ext = $image->getClientOriginalExtension();
            $randomStr= Str::random(30);
            $imageName = $randomStr.'.'.$ext;


                $img = explode(",", trim($imgSize));
                $imgWidth = $img[0];
                $imgHeight = $img[1];
 
            Image::make($image)->resize($imgWidth, $imgHeight)
                                  ->save(public_path('uploads/'.$path.'/'.$imageName));

           return $imageName;
       }
    }


                                //'uploads/logo', $query->image, 
     public function deleteImage($path, $image){
        if(File::exists(public_path('uploads/'.$path.'/'.$image))){
            File::delete(public_path('uploads/'.$path.'/'.$image));
        }
     }
   
}
