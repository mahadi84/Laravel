Date: 06-March-2024


00. Why API? What is the advantage of it?
01. If I write all API Routes to the web, what is the problem?
02. How to implement like:
    a) All admin can see all users, buyers, etc But only selected admin can UPDATE/DELETE  all users' info.
    b) Normal users see only his info?
    c) Seller must have a Product and Buyer(User) must have a transaction.

03. Why Authentication in API? Why session is not enough?
04. Difference among Passport Clients, Personal Clients, Password Clients, and Authorization Clients.
05. Why Passport is not enough to protect/Authorize?
06. What's the difference between Gate and Policy?
    
    WHY ARE THESE USED FOR and HOW?
        $this->middleware('transform.input:' . UserTransformer::class)->only(['update']); //** hide real table field name while updating data.
        $this->middleware('client.credentials')->only(['resend']); //**Any passport-client with Only access_token.
        $this->middleware('auth:api')->except(['showRegisterForm', 'store', 'verify', 'resend']); //** Passport Client with grant_type password, associated with Username and Password.      
        $this->middleware('scope:manage-account')->only(['show', 'update']); //** Passport Client with grant_type password, associated with Username and Password and SCOPE.
        $this->middleware(['auth:api', 'scopes:edit,create,delete'])->except(['index', 'show']); //** Passport Client with grant_type password, associated with Username and Password and SCOPES.
        $this->middleware('can:view-user,user')->only('show'); //** Passport Client with grant_type password, associated with Username and Password and POLICY.
               public function index(){
                    if (!Gate::allows('admin-action')) {  //** Passport Client with grant_type password, associated with Username and Password and GATE
                        throw new AuthorizationException('This action is unauthorized');
                    }
                    $users = User::all();
                    return $this->showAll($users);
                }


07. What's the solution for the below scenario for API:
    A) Admin User with scope:manage-account: will be able to function INDEX, SHOW, UPDATE and DELETE.
    B) Admin User but without scope:manage-account: will be able to function INDEX all, SHOW and UPDATE his info only.
    C) General User without scope:manage-account: will be able to function SHOW and UPDATE his info only.


08. How to get a user ID from an Access Token?
09. How to hide the original table's field's name while showing, updating, and deleting to the other name as per my choice?




-
